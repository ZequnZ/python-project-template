name: CI
on: pull_request

jobs:
  ci:
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10"]
        poetry-version: ["1.7.1"]
        os: [ubuntu-22.04]
    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Task
        uses: arduino/setup-task@v2
        with:
          version: 3.38.0

      - name: Install poetry
        uses: abatilo/actions-poetry@v2
        with:
          poetry-version: ${{ matrix.poetry-version }}

      - name: Setup a local virtual environment (if no poetry.toml file)
        run: |
          poetry config virtualenvs.create true --local
          poetry config virtualenvs.in-project true --local

      - uses: actions/cache@v4
        name: Define a cache for the virtual environment based on the dependencies lock file
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}

      - name: Install the project dependencies
        run: poetry install

      - uses: pre-commit/action@v3.0.1

      - name: Run the automated tests(using pytest)
        run: poetry run pytest ./src/test -sv --durations=0

      - uses: pyupio/safety-action@v1
        name: Run Safety check(using safety)
        with:
          api-key: ${{ secrets.SAFETY_API_KEY }}
          args: --detailed-output # To always see detailed output from this action

      - name: Gather updateable dependencies
        id: gather_updateable_dependencies
        run: |
          body=$(poetry show --outdate --no-interaction)
          echo ::set-output name="body::$body"

# ref: https://github.com/marketplace/actions/python-poetry-action
